/*---- Mixins ----*/
@mixin mq($mqString) {
  @media #{$mqString} {
    @content;
  }
}

@mixin isAdd($propotyName, $propotyValue) {
  @if($propotyValue !="none") {
    #{$propotyName}: $propotyValue;
  }
}

@mixin footer($footerHeight, $footerBackground) {
  position: relative;
  height  : $footerHeight;
  margin  : -$footerHeight auto 0;
  @include isAdd("background", $footerBackground);
}

@mixin minWidthAndHeight($width, $height, $minWidth) {
  width    : $width;
  height   : $height;
  min-width: $minWidth;
}

@mixin backgroundImage($background-image, $background-position, $background-size, $background-repeat) {
  background: #{$background-image} #{$background-position}/#{$background-size} #{$background-repeat};
}

// 多张背景图
/* background: url(images/scroll_top.jpg) center top no-repeat,
            url(images/scroll_bottom.jpg) center bottom no-repeat,
            url(images/scroll_middle.jpg) center top repeat-y;
 */

/* 查看页面结构 */
@mixin outline () {
  body * {
    outline: 1px solid red
  }
}

@mixin scrollbar($width, $height, $radius, $color, $color1) {

  // 改变滚动条样式
  // ::-webkit-scrollbar 滚动条整体部分，可以设置宽度啥的
  // ::-webkit-scrollbar-button 滚动条两端的按钮
  // ::-webkit-scrollbar-track 外层轨道
  // ::-webkit-scrollbar-track-piece 内层滚动槽
  // ::-webkit-scrollbar-thumb 滚动的滑块
  // ::-webkit-scrollbar-corner 边角
  // ::-webkit-resizer 定义右下角拖动块的样式

  ::-webkit-scrollbar {
    width : $width; //垂直
    height: $height; //水平
  }

  ::-webkit-scrollbar-track-piece {
    background-color     : $color; //槽的颜色
    -webkit-border-radius: $radius;
    border-radius        : $radius;
  }

  /* 水平 */
  ::-webkit-scrollbar-thumb:vertical {
    height               : $height;
    background-color     : $color1; //水平块的颜色
    -webkit-border-radius: $height;
    border-radius        : $height;

  }

  /* 垂直 */
  ::-webkit-scrollbar-thumb:horizontal {
    width                : $width;
    background-color     : $color1; //垂直块的颜色
    -webkit-border-radius: $width;
    border-radius        : $width;

  }
}

@mixin mark ($bg, $opcity) {
  width     : 100%;
  height    : 100%;
  background: $bg;
  opacity   : $opcity;
}

@mixin fixedRightBox($widht, $height, $top, $right) {
  position: fixed;
  top     : $top;
  right   : $right;
  width   : $widht;
  height  : $height;
  z-index : 4;
}

@mixin fixedleftBox($widht, $height, $top, $left) {
  position: fixed;
  top     : $top;
  left    : $left;
  width   : $widht;
  height  : $height;
  z-index : 4;
}

/**
* 溢出省略号
* @param {Number} 行数
*/
@mixin ellipsis($rowCount: 1) {
  @if $rowCount <=1 {
    overflow     : hidden;
    text-overflow: ellipsis;
    white-space  : nowrap;
  }

  @else {
    min-width         : 0;
    overflow          : hidden;
    text-overflow     : ellipsis;
    display           : -webkit-box;
    -webkit-line-clamp: $rowCount;
    -webkit-box-orient: vertical;
  }
}

/**
* 1px边框
* {List}: 多个方向边框, 默认值为bottom, 你可以根据需要传入(top, left, bottom, right) 4个方向;
* {Color} 边框的颜色, 默认#ccc;
* {List} 4个圆角半径, 默认0;
* {String} 一个高级设置, 一般都不需要改动, 由于细边框的实现使用了css的伪类, 所以为了规避可能出现的样式冲突, 我们可以自己指定使用:after还是:before, 默认after;
*/
@mixin thinBorder($directionMaps: bottom,
  $color: #ccc,
  $radius: (0,
    0,
    0,
    0),
  $position: after) {
  // 是否只有一个方向
  $isOnlyOneDir: string==type-of($directionMaps);

  @if ($isOnlyOneDir) {
    $directionMaps: ($directionMaps);
  }

  @each $directionMap in $directionMaps {
    border-#{$directionMap}: 1px solid $color;
  }

  // 判断圆角是list还是number
  @if (list==type-of($radius)) {
    border-radius: nth($radius, 1) nth($radius, 2) nth($radius, 3) nth($radius, 4);
  }

  @else {
    border-radius: $radius;
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 2) {
    & {
      position: relative;

      // 删除1像素密度比下的边框
      @each $directionMap in $directionMaps {
        border-#{$directionMap}: none;
      }
    }

    &:#{$position} {
      content         : "";
      position        : absolute;
      top             : 0;
      left            : 0;
      display         : block;
      width           : 200%;
      height          : 200%;
      transform       : scale(0.5);
      box-sizing      : border-box;
      padding         : 1px;
      transform-origin: 0 0;
      pointer-events  : none;
      border          : 0 solid $color;

      @each $directionMap in $directionMaps {
        border-#{$directionMap}-width: 1px;
      }

      // 判断圆角是list还是number
      @if (list==type-of($radius)) {
        border-radius: nth($radius, 1) * 2 nth($radius, 2) * 2 nth($radius, 3) * 2 nth($radius, 4) * 2;
      }

      @else {
        border-radius: $radius * 2;
      }
    }
  }

  @media only screen and (-webkit-min-device-pixel-ratio: 3) {
    &:#{$position} {

      // 判断圆角是list还是number
      @if (list==type-of($radius)) {
        border-radius: nth($radius, 1) * 3 nth($radius, 2) * 3 nth($radius, 3) * 3 nth($radius, 4) * 3;
      }

      @else {
        border-radius: $radius * 3;
      }

      width    : 300%;
      height   : 300%;
      transform: scale(0.3333);
    }
  }
}

/**
* 等边三角形
* @param {String} 尺寸
* @param {Color} 颜色
* @param {String} 方向
*/
@mixin triangle($size: 5px, $color: rgba(0, 0, 0, 0.6), $dir: bottom) {
  width       : 0;
  height      : 0;
  border-style: solid;

  @if (bottom==$dir) {
    border-width: $size $size 0 $size;
    border-color: $color transparent transparent transparent;
  }

  @else if (top==$dir) {
    border-width: 0 $size $size $size;
    border-color: transparent transparent $color transparent;
  }

  @else if (right==$dir) {
    border-width: $size 0 $size $size;
    border-color: transparent transparent transparent $color;
  }

  @else if (left==$dir) {
    border-width: $size $size $size 0;
    border-color: transparent $color transparent transparent;
  }
}

/**
* 棋盘背景
* @param {Color} 背景色
*/
@mixin bgChessboard($color: #aaa) {
  background-image: linear-gradient(45deg,
      $color 25%,
      transparent 25%,
      transparent 75%,
      $color 75%,
      $color),
    linear-gradient(45deg,
      $color 26%,
      transparent 26%,
      transparent 74%,
      $color 74%,
      $color);
  background-size    : 10vw 10vw;
  background-position: 0 0, 5vw 5vw;
}